services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: valhub
      POSTGRES_PASSWORD: valhub
      POSTGRES_USER: valhub
    ports:
      - "5432:5432"
    volumes:
      - valhub:/data/db

  api:
    build:
      context: ./valhub
      dockerfile: Dockerfile
      args:
        djangosk: ${djangosk}
    env_file:
      - .env
    environment:
      PGDATABASE: valhub
      PGUSER: valhub
      PGHOST: db
      PG_DATABASE_URI: "postgresql://valhub:valhub@db/valhub"
      DJANGO_SUPERUSER_USERNAME: ${admin_username}
      DJANGO_SUPERUSER_PASSWORD: ${admin_password}
      DJANGO_SUPERUSER_EMAIL: ${admin_email}
      DJANGO_SECRET_KEY: ${djangosk}
    ports:
      - "8005:8005"
    depends_on:
      - db
      - sqs
    volumes:
      - type: bind
        source: ./valhub
        target: /root/valhub

  s3:
    build:
      context: ./s3Emulator
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      HOST: 0.0.0.0
    ports:
      - "5000:5000"
    depends_on:
      - api
    volumes:
      - type: bind
        source: ./s3Emulator/pv-validation-hub-bucket
        target: /pv-validation-hub-bucket

  ec2:
    build:
      context: ./ec2
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      HOST: 0.0.0.0
    ports:
      - "7000:7000"
    depends_on:
      - api
    volumes:
      - type: bind
        source: ./ec2
        target: /root/admin
      # aws credentials
      - type: bind
        source: ~/.aws
        target: /root/.aws

  react-client:
    stdin_open: true
    build:
      context: ./pv-validation-hub-client
      dockerfile: Dockerfile
    environment:
      HOST: 0.0.0.0
    ports:
      - "3000:3000"
    depends_on:
      - api
      - s3
    volumes:
      - type: bind
        source: ./pv-validation-hub-client
        target: /app

  sqs:
    image: softwaremill/elasticmq:latest
    ports:
      - "9324:9324"
    environment:
      - "ELASTICMQ_OPTS=-Dconfig.file=/opt/elasticmq.conf"
    volumes:
      - ./custom.conf:/opt/elasticmq.conf
      - ./application.ini:/opt/docker/conf/application.ini

  worker:
    build:
      context: ./workers
    env_file:
      - .env
    ports:
      - "8500:8500"
      - "8787:8787"
    depends_on:
      - api
      - s3
      - sqs
    volumes:
      - ./workers/current_evaluation:/root/worker/current_evaluation
      - ./workers/logs:/root/worker/logs
      # - ./workers/tmp:/tmp
      - ./workers/requirements.txt:/root/worker/requirements.txt
      - ./workers/src:/root/worker/src
    restart: unless-stopped

volumes:
  valhub:
